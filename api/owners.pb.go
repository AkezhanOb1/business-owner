// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.9.2
// source: owners.proto

package owners

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BusinessOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessOwnerID                int64  `protobuf:"varint,1,opt,name=businessOwnerID,proto3" json:"businessOwnerID,omitempty"`
	BusinessOwnerName              string `protobuf:"bytes,2,opt,name=businessOwnerName,proto3" json:"businessOwnerName,omitempty"`
	BusinessOwnerEmail             string `protobuf:"bytes,3,opt,name=businessOwnerEmail,proto3" json:"businessOwnerEmail,omitempty"`
	BusinessOwnerPhoneNumberPrefix string `protobuf:"bytes,4,opt,name=businessOwnerPhoneNumberPrefix,proto3" json:"businessOwnerPhoneNumberPrefix,omitempty"`
	BusinessOwnerPhoneNumber       string `protobuf:"bytes,5,opt,name=businessOwnerPhoneNumber,proto3" json:"businessOwnerPhoneNumber,omitempty"`
}

func (x *BusinessOwner) Reset() {
	*x = BusinessOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessOwner) ProtoMessage() {}

func (x *BusinessOwner) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessOwner.ProtoReflect.Descriptor instead.
func (*BusinessOwner) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessOwner) GetBusinessOwnerID() int64 {
	if x != nil {
		return x.BusinessOwnerID
	}
	return 0
}

func (x *BusinessOwner) GetBusinessOwnerName() string {
	if x != nil {
		return x.BusinessOwnerName
	}
	return ""
}

func (x *BusinessOwner) GetBusinessOwnerEmail() string {
	if x != nil {
		return x.BusinessOwnerEmail
	}
	return ""
}

func (x *BusinessOwner) GetBusinessOwnerPhoneNumberPrefix() string {
	if x != nil {
		return x.BusinessOwnerPhoneNumberPrefix
	}
	return ""
}

func (x *BusinessOwner) GetBusinessOwnerPhoneNumber() string {
	if x != nil {
		return x.BusinessOwnerPhoneNumber
	}
	return ""
}

type CreateBusinessOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessOwnerName              string `protobuf:"bytes,1,opt,name=businessOwnerName,proto3" json:"businessOwnerName,omitempty"`
	BusinessOwnerEmail             string `protobuf:"bytes,2,opt,name=businessOwnerEmail,proto3" json:"businessOwnerEmail,omitempty"`
	BusinessOwnerPassword          string `protobuf:"bytes,3,opt,name=businessOwnerPassword,proto3" json:"businessOwnerPassword,omitempty"`
	BusinessOwnerPhoneNumberPrefix string `protobuf:"bytes,4,opt,name=businessOwnerPhoneNumberPrefix,proto3" json:"businessOwnerPhoneNumberPrefix,omitempty"`
	BusinessOwnerPhoneNumber       string `protobuf:"bytes,5,opt,name=businessOwnerPhoneNumber,proto3" json:"businessOwnerPhoneNumber,omitempty"`
	BusinessCompanyID              int64  `protobuf:"varint,6,opt,name=businessCompanyID,proto3" json:"businessCompanyID,omitempty"`
}

func (x *CreateBusinessOwnerRequest) Reset() {
	*x = CreateBusinessOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessOwnerRequest) ProtoMessage() {}

func (x *CreateBusinessOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessOwnerRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessOwnerRequest) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBusinessOwnerRequest) GetBusinessOwnerName() string {
	if x != nil {
		return x.BusinessOwnerName
	}
	return ""
}

func (x *CreateBusinessOwnerRequest) GetBusinessOwnerEmail() string {
	if x != nil {
		return x.BusinessOwnerEmail
	}
	return ""
}

func (x *CreateBusinessOwnerRequest) GetBusinessOwnerPassword() string {
	if x != nil {
		return x.BusinessOwnerPassword
	}
	return ""
}

func (x *CreateBusinessOwnerRequest) GetBusinessOwnerPhoneNumberPrefix() string {
	if x != nil {
		return x.BusinessOwnerPhoneNumberPrefix
	}
	return ""
}

func (x *CreateBusinessOwnerRequest) GetBusinessOwnerPhoneNumber() string {
	if x != nil {
		return x.BusinessOwnerPhoneNumber
	}
	return ""
}

func (x *CreateBusinessOwnerRequest) GetBusinessCompanyID() int64 {
	if x != nil {
		return x.BusinessCompanyID
	}
	return 0
}

type CreateBusinessOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessOwner *BusinessOwner `protobuf:"bytes,1,opt,name=BusinessOwner,proto3" json:"BusinessOwner,omitempty"`
}

func (x *CreateBusinessOwnerResponse) Reset() {
	*x = CreateBusinessOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessOwnerResponse) ProtoMessage() {}

func (x *CreateBusinessOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessOwnerResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessOwnerResponse) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBusinessOwnerResponse) GetBusinessOwner() *BusinessOwner {
	if x != nil {
		return x.BusinessOwner
	}
	return nil
}

type BindCompanyToBusinessOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessOwnerID   int64 `protobuf:"varint,1,opt,name=businessOwnerID,proto3" json:"businessOwnerID,omitempty"`
	BusinessCompanyID int64 `protobuf:"varint,2,opt,name=businessCompanyID,proto3" json:"businessCompanyID,omitempty"`
}

func (x *BindCompanyToBusinessOwnerRequest) Reset() {
	*x = BindCompanyToBusinessOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindCompanyToBusinessOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindCompanyToBusinessOwnerRequest) ProtoMessage() {}

func (x *BindCompanyToBusinessOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindCompanyToBusinessOwnerRequest.ProtoReflect.Descriptor instead.
func (*BindCompanyToBusinessOwnerRequest) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{3}
}

func (x *BindCompanyToBusinessOwnerRequest) GetBusinessOwnerID() int64 {
	if x != nil {
		return x.BusinessOwnerID
	}
	return 0
}

func (x *BindCompanyToBusinessOwnerRequest) GetBusinessCompanyID() int64 {
	if x != nil {
		return x.BusinessCompanyID
	}
	return 0
}

type BindCompanyToBusinessOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindSuccess bool `protobuf:"varint,1,opt,name=BindSuccess,proto3" json:"BindSuccess,omitempty"`
}

func (x *BindCompanyToBusinessOwnerResponse) Reset() {
	*x = BindCompanyToBusinessOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindCompanyToBusinessOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindCompanyToBusinessOwnerResponse) ProtoMessage() {}

func (x *BindCompanyToBusinessOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindCompanyToBusinessOwnerResponse.ProtoReflect.Descriptor instead.
func (*BindCompanyToBusinessOwnerResponse) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{4}
}

func (x *BindCompanyToBusinessOwnerResponse) GetBindSuccess() bool {
	if x != nil {
		return x.BindSuccess
	}
	return false
}

type CheckOwnerPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CheckOwnerPasswordRequest) Reset() {
	*x = CheckOwnerPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOwnerPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOwnerPasswordRequest) ProtoMessage() {}

func (x *CheckOwnerPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOwnerPasswordRequest.ProtoReflect.Descriptor instead.
func (*CheckOwnerPasswordRequest) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{5}
}

func (x *CheckOwnerPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CheckOwnerPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CheckOwnerPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *CheckOwnerPasswordResponse) Reset() {
	*x = CheckOwnerPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOwnerPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOwnerPasswordResponse) ProtoMessage() {}

func (x *CheckOwnerPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOwnerPasswordResponse.ProtoReflect.Descriptor instead.
func (*CheckOwnerPasswordResponse) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{6}
}

func (x *CheckOwnerPasswordResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type GetBusinessOwnerCompaniesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetBusinessOwnerCompaniesRequest) Reset() {
	*x = GetBusinessOwnerCompaniesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessOwnerCompaniesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessOwnerCompaniesRequest) ProtoMessage() {}

func (x *GetBusinessOwnerCompaniesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessOwnerCompaniesRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessOwnerCompaniesRequest) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{7}
}

func (x *GetBusinessOwnerCompaniesRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type BusinessCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessCompanyID         int64  `protobuf:"varint,1,opt,name=businessCompanyID,proto3" json:"businessCompanyID,omitempty"`
	BusinessCompanyCategoryID int64  `protobuf:"varint,2,opt,name=businessCompanyCategoryID,proto3" json:"businessCompanyCategoryID,omitempty"`
	BusinessCompanyName       string `protobuf:"bytes,3,opt,name=businessCompanyName,proto3" json:"businessCompanyName,omitempty"`
}

func (x *BusinessCompany) Reset() {
	*x = BusinessCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessCompany) ProtoMessage() {}

func (x *BusinessCompany) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessCompany.ProtoReflect.Descriptor instead.
func (*BusinessCompany) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{8}
}

func (x *BusinessCompany) GetBusinessCompanyID() int64 {
	if x != nil {
		return x.BusinessCompanyID
	}
	return 0
}

func (x *BusinessCompany) GetBusinessCompanyCategoryID() int64 {
	if x != nil {
		return x.BusinessCompanyCategoryID
	}
	return 0
}

func (x *BusinessCompany) GetBusinessCompanyName() string {
	if x != nil {
		return x.BusinessCompanyName
	}
	return ""
}

type GetBusinessOwnerCompaniesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Companies []*BusinessCompany `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`
}

func (x *GetBusinessOwnerCompaniesResponse) Reset() {
	*x = GetBusinessOwnerCompaniesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_owners_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessOwnerCompaniesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessOwnerCompaniesResponse) ProtoMessage() {}

func (x *GetBusinessOwnerCompaniesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_owners_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessOwnerCompaniesResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessOwnerCompaniesResponse) Descriptor() ([]byte, []int) {
	return file_owners_proto_rawDescGZIP(), []int{9}
}

func (x *GetBusinessOwnerCompaniesResponse) GetCompanies() []*BusinessCompany {
	if x != nil {
		return x.Companies
	}
	return nil
}

var File_owners_proto protoreflect.FileDescriptor

var file_owners_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x9b,
	0x02, 0x0a, 0x0d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x3a, 0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xe2, 0x02, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x46, 0x0a, 0x1e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3a, 0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x22, 0x62, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x0d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x7b, 0x0a, 0x21, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x22, 0x46, 0x0a, 0x22, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x54, 0x6f, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x64,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x42,
	0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x1a, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x38, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x19, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x32, 0x84, 0x04,
	0x0a, 0x14, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x2a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01,
	0x0a, 0x1a, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x42, 0x69,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_owners_proto_rawDescOnce sync.Once
	file_owners_proto_rawDescData = file_owners_proto_rawDesc
)

func file_owners_proto_rawDescGZIP() []byte {
	file_owners_proto_rawDescOnce.Do(func() {
		file_owners_proto_rawDescData = protoimpl.X.CompressGZIP(file_owners_proto_rawDescData)
	})
	return file_owners_proto_rawDescData
}

var file_owners_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_owners_proto_goTypes = []interface{}{
	(*BusinessOwner)(nil),                      // 0: businessOwners.BusinessOwner
	(*CreateBusinessOwnerRequest)(nil),         // 1: businessOwners.CreateBusinessOwnerRequest
	(*CreateBusinessOwnerResponse)(nil),        // 2: businessOwners.CreateBusinessOwnerResponse
	(*BindCompanyToBusinessOwnerRequest)(nil),  // 3: businessOwners.BindCompanyToBusinessOwnerRequest
	(*BindCompanyToBusinessOwnerResponse)(nil), // 4: businessOwners.BindCompanyToBusinessOwnerResponse
	(*CheckOwnerPasswordRequest)(nil),          // 5: businessOwners.CheckOwnerPasswordRequest
	(*CheckOwnerPasswordResponse)(nil),         // 6: businessOwners.CheckOwnerPasswordResponse
	(*GetBusinessOwnerCompaniesRequest)(nil),   // 7: businessOwners.GetBusinessOwnerCompaniesRequest
	(*BusinessCompany)(nil),                    // 8: businessOwners.BusinessCompany
	(*GetBusinessOwnerCompaniesResponse)(nil),  // 9: businessOwners.GetBusinessOwnerCompaniesResponse
}
var file_owners_proto_depIdxs = []int32{
	0, // 0: businessOwners.CreateBusinessOwnerResponse.BusinessOwner:type_name -> businessOwners.BusinessOwner
	8, // 1: businessOwners.GetBusinessOwnerCompaniesResponse.companies:type_name -> businessOwners.BusinessCompany
	7, // 2: businessOwners.BusinessOwnerService.GetBusinessOwnerCompanies:input_type -> businessOwners.GetBusinessOwnerCompaniesRequest
	1, // 3: businessOwners.BusinessOwnerService.CreateBusinessOwner:input_type -> businessOwners.CreateBusinessOwnerRequest
	3, // 4: businessOwners.BusinessOwnerService.BindCompanyToBusinessOwner:input_type -> businessOwners.BindCompanyToBusinessOwnerRequest
	5, // 5: businessOwners.BusinessOwnerService.CheckOwnerPassword:input_type -> businessOwners.CheckOwnerPasswordRequest
	9, // 6: businessOwners.BusinessOwnerService.GetBusinessOwnerCompanies:output_type -> businessOwners.GetBusinessOwnerCompaniesResponse
	2, // 7: businessOwners.BusinessOwnerService.CreateBusinessOwner:output_type -> businessOwners.CreateBusinessOwnerResponse
	4, // 8: businessOwners.BusinessOwnerService.BindCompanyToBusinessOwner:output_type -> businessOwners.BindCompanyToBusinessOwnerResponse
	6, // 9: businessOwners.BusinessOwnerService.CheckOwnerPassword:output_type -> businessOwners.CheckOwnerPasswordResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_owners_proto_init() }
func file_owners_proto_init() {
	if File_owners_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_owners_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindCompanyToBusinessOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindCompanyToBusinessOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOwnerPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOwnerPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessOwnerCompaniesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_owners_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessOwnerCompaniesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_owners_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_owners_proto_goTypes,
		DependencyIndexes: file_owners_proto_depIdxs,
		MessageInfos:      file_owners_proto_msgTypes,
	}.Build()
	File_owners_proto = out.File
	file_owners_proto_rawDesc = nil
	file_owners_proto_goTypes = nil
	file_owners_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BusinessOwnerServiceClient is the client API for BusinessOwnerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BusinessOwnerServiceClient interface {
	GetBusinessOwnerCompanies(ctx context.Context, in *GetBusinessOwnerCompaniesRequest, opts ...grpc.CallOption) (*GetBusinessOwnerCompaniesResponse, error)
	CreateBusinessOwner(ctx context.Context, in *CreateBusinessOwnerRequest, opts ...grpc.CallOption) (*CreateBusinessOwnerResponse, error)
	BindCompanyToBusinessOwner(ctx context.Context, in *BindCompanyToBusinessOwnerRequest, opts ...grpc.CallOption) (*BindCompanyToBusinessOwnerResponse, error)
	CheckOwnerPassword(ctx context.Context, in *CheckOwnerPasswordRequest, opts ...grpc.CallOption) (*CheckOwnerPasswordResponse, error)
}

type businessOwnerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBusinessOwnerServiceClient(cc grpc.ClientConnInterface) BusinessOwnerServiceClient {
	return &businessOwnerServiceClient{cc}
}

func (c *businessOwnerServiceClient) GetBusinessOwnerCompanies(ctx context.Context, in *GetBusinessOwnerCompaniesRequest, opts ...grpc.CallOption) (*GetBusinessOwnerCompaniesResponse, error) {
	out := new(GetBusinessOwnerCompaniesResponse)
	err := c.cc.Invoke(ctx, "/businessOwners.BusinessOwnerService/GetBusinessOwnerCompanies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessOwnerServiceClient) CreateBusinessOwner(ctx context.Context, in *CreateBusinessOwnerRequest, opts ...grpc.CallOption) (*CreateBusinessOwnerResponse, error) {
	out := new(CreateBusinessOwnerResponse)
	err := c.cc.Invoke(ctx, "/businessOwners.BusinessOwnerService/CreateBusinessOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessOwnerServiceClient) BindCompanyToBusinessOwner(ctx context.Context, in *BindCompanyToBusinessOwnerRequest, opts ...grpc.CallOption) (*BindCompanyToBusinessOwnerResponse, error) {
	out := new(BindCompanyToBusinessOwnerResponse)
	err := c.cc.Invoke(ctx, "/businessOwners.BusinessOwnerService/BindCompanyToBusinessOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessOwnerServiceClient) CheckOwnerPassword(ctx context.Context, in *CheckOwnerPasswordRequest, opts ...grpc.CallOption) (*CheckOwnerPasswordResponse, error) {
	out := new(CheckOwnerPasswordResponse)
	err := c.cc.Invoke(ctx, "/businessOwners.BusinessOwnerService/CheckOwnerPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BusinessOwnerServiceServer is the server API for BusinessOwnerService service.
type BusinessOwnerServiceServer interface {
	GetBusinessOwnerCompanies(context.Context, *GetBusinessOwnerCompaniesRequest) (*GetBusinessOwnerCompaniesResponse, error)
	CreateBusinessOwner(context.Context, *CreateBusinessOwnerRequest) (*CreateBusinessOwnerResponse, error)
	BindCompanyToBusinessOwner(context.Context, *BindCompanyToBusinessOwnerRequest) (*BindCompanyToBusinessOwnerResponse, error)
	CheckOwnerPassword(context.Context, *CheckOwnerPasswordRequest) (*CheckOwnerPasswordResponse, error)
}

// UnimplementedBusinessOwnerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBusinessOwnerServiceServer struct {
}

func (*UnimplementedBusinessOwnerServiceServer) GetBusinessOwnerCompanies(context.Context, *GetBusinessOwnerCompaniesRequest) (*GetBusinessOwnerCompaniesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessOwnerCompanies not implemented")
}
func (*UnimplementedBusinessOwnerServiceServer) CreateBusinessOwner(context.Context, *CreateBusinessOwnerRequest) (*CreateBusinessOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBusinessOwner not implemented")
}
func (*UnimplementedBusinessOwnerServiceServer) BindCompanyToBusinessOwner(context.Context, *BindCompanyToBusinessOwnerRequest) (*BindCompanyToBusinessOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindCompanyToBusinessOwner not implemented")
}
func (*UnimplementedBusinessOwnerServiceServer) CheckOwnerPassword(context.Context, *CheckOwnerPasswordRequest) (*CheckOwnerPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckOwnerPassword not implemented")
}

func RegisterBusinessOwnerServiceServer(s *grpc.Server, srv BusinessOwnerServiceServer) {
	s.RegisterService(&_BusinessOwnerService_serviceDesc, srv)
}

func _BusinessOwnerService_GetBusinessOwnerCompanies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessOwnerCompaniesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOwnerServiceServer).GetBusinessOwnerCompanies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessOwners.BusinessOwnerService/GetBusinessOwnerCompanies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOwnerServiceServer).GetBusinessOwnerCompanies(ctx, req.(*GetBusinessOwnerCompaniesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessOwnerService_CreateBusinessOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBusinessOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOwnerServiceServer).CreateBusinessOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessOwners.BusinessOwnerService/CreateBusinessOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOwnerServiceServer).CreateBusinessOwner(ctx, req.(*CreateBusinessOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessOwnerService_BindCompanyToBusinessOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindCompanyToBusinessOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOwnerServiceServer).BindCompanyToBusinessOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessOwners.BusinessOwnerService/BindCompanyToBusinessOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOwnerServiceServer).BindCompanyToBusinessOwner(ctx, req.(*BindCompanyToBusinessOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessOwnerService_CheckOwnerPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckOwnerPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOwnerServiceServer).CheckOwnerPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessOwners.BusinessOwnerService/CheckOwnerPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOwnerServiceServer).CheckOwnerPassword(ctx, req.(*CheckOwnerPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BusinessOwnerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "businessOwners.BusinessOwnerService",
	HandlerType: (*BusinessOwnerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBusinessOwnerCompanies",
			Handler:    _BusinessOwnerService_GetBusinessOwnerCompanies_Handler,
		},
		{
			MethodName: "CreateBusinessOwner",
			Handler:    _BusinessOwnerService_CreateBusinessOwner_Handler,
		},
		{
			MethodName: "BindCompanyToBusinessOwner",
			Handler:    _BusinessOwnerService_BindCompanyToBusinessOwner_Handler,
		},
		{
			MethodName: "CheckOwnerPassword",
			Handler:    _BusinessOwnerService_CheckOwnerPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "owners.proto",
}
